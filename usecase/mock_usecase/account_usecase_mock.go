// Code generated by MockGen. DO NOT EDIT.
// Source: ./usecase/account_usecase.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	reflect "reflect"

	helper "github.com/andikabahari/eoplatform/helper"
	model "github.com/andikabahari/eoplatform/model"
	request "github.com/andikabahari/eoplatform/request"
	gomock "github.com/golang/mock/gomock"
)

// MockAccountUsecase is a mock of AccountUsecase interface.
type MockAccountUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockAccountUsecaseMockRecorder
}

// MockAccountUsecaseMockRecorder is the mock recorder for MockAccountUsecase.
type MockAccountUsecaseMockRecorder struct {
	mock *MockAccountUsecase
}

// NewMockAccountUsecase creates a new mock instance.
func NewMockAccountUsecase(ctrl *gomock.Controller) *MockAccountUsecase {
	mock := &MockAccountUsecase{ctrl: ctrl}
	mock.recorder = &MockAccountUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountUsecase) EXPECT() *MockAccountUsecaseMockRecorder {
	return m.recorder
}

// GetAccount mocks base method.
func (m *MockAccountUsecase) GetAccount(claims *helper.JWTCustomClaims, user *model.User) helper.APIError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccount", claims, user)
	ret0, _ := ret[0].(helper.APIError)
	return ret0
}

// GetAccount indicates an expected call of GetAccount.
func (mr *MockAccountUsecaseMockRecorder) GetAccount(claims, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccount", reflect.TypeOf((*MockAccountUsecase)(nil).GetAccount), claims, user)
}

// ResetPassword mocks base method.
func (m *MockAccountUsecase) ResetPassword(claims *helper.JWTCustomClaims, user *model.User, req *request.UpdateUserPasswordRequest) helper.APIError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResetPassword", claims, user, req)
	ret0, _ := ret[0].(helper.APIError)
	return ret0
}

// ResetPassword indicates an expected call of ResetPassword.
func (mr *MockAccountUsecaseMockRecorder) ResetPassword(claims, user, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResetPassword", reflect.TypeOf((*MockAccountUsecase)(nil).ResetPassword), claims, user, req)
}

// UpdateAccount mocks base method.
func (m *MockAccountUsecase) UpdateAccount(claims *helper.JWTCustomClaims, user *model.User, req *request.UpdateUserRequest) helper.APIError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAccount", claims, user, req)
	ret0, _ := ret[0].(helper.APIError)
	return ret0
}

// UpdateAccount indicates an expected call of UpdateAccount.
func (mr *MockAccountUsecaseMockRecorder) UpdateAccount(claims, user, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAccount", reflect.TypeOf((*MockAccountUsecase)(nil).UpdateAccount), claims, user, req)
}
