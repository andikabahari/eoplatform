// Code generated by MockGen. DO NOT EDIT.
// Source: ./usecase/feedback_usecase.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	reflect "reflect"

	helper "github.com/andikabahari/eoplatform/helper"
	model "github.com/andikabahari/eoplatform/model"
	request "github.com/andikabahari/eoplatform/request"
	gomock "github.com/golang/mock/gomock"
)

// MockFeedbackUsecase is a mock of FeedbackUsecase interface.
type MockFeedbackUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockFeedbackUsecaseMockRecorder
}

// MockFeedbackUsecaseMockRecorder is the mock recorder for MockFeedbackUsecase.
type MockFeedbackUsecaseMockRecorder struct {
	mock *MockFeedbackUsecase
}

// NewMockFeedbackUsecase creates a new mock instance.
func NewMockFeedbackUsecase(ctrl *gomock.Controller) *MockFeedbackUsecase {
	mock := &MockFeedbackUsecase{ctrl: ctrl}
	mock.recorder = &MockFeedbackUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFeedbackUsecase) EXPECT() *MockFeedbackUsecaseMockRecorder {
	return m.recorder
}

// CreateFeedback mocks base method.
func (m *MockFeedbackUsecase) CreateFeedback(claims *helper.JWTCustomClaims, feedback *model.Feedback, req *request.CreateFeedbackRequest) helper.APIError {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFeedback", claims, feedback, req)
	ret0, _ := ret[0].(helper.APIError)
	return ret0
}

// CreateFeedback indicates an expected call of CreateFeedback.
func (mr *MockFeedbackUsecaseMockRecorder) CreateFeedback(claims, feedback, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFeedback", reflect.TypeOf((*MockFeedbackUsecase)(nil).CreateFeedback), claims, feedback, req)
}

// GetFeedbacks mocks base method.
func (m *MockFeedbackUsecase) GetFeedbacks(feedbacks *[]model.Feedback, toUserID string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetFeedbacks", feedbacks, toUserID)
}

// GetFeedbacks indicates an expected call of GetFeedbacks.
func (mr *MockFeedbackUsecaseMockRecorder) GetFeedbacks(feedbacks, toUserID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFeedbacks", reflect.TypeOf((*MockFeedbackUsecase)(nil).GetFeedbacks), feedbacks, toUserID)
}
